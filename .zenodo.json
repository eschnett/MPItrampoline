{
  "title": "MPItrampoline",
  "upload_type": "software",
  "creators": [
    {
      "name": "Schnetter, Erik",
      "affiliation": "Perimeter Institute for Theoretical Physics, Waterloo, Ontario, Canada",
      "orcid": "0000-0002-4518-9017"
    }
  ],
  "description": "MPI is the de-facto standard for inter-node communication on HPC systems, and has been for the past 25 years. While highly successful, MPI is a standard for source code (it defines an API), and is not a standard defining binary compatibility (it does not define an ABI). This means that applications running on HPC systems need to be compiled anew on every system. This is tedious, since the software that is available on every HPC system is slightly different.\n\nThis project attempts to remedy this. It defines an ABI for MPI, and provides an MPI implementation based on this ABI. That is, MPItrampoline does not implement any MPI functions itself, it only forwards them to a real implementation via this ABI. The advantage is that one can produce portable applications that can use any given MPI implementation. For example, this will make it possible to build external packages for Julia via Yggdrasil that run efficiently on almost any HPC system.\n\nA small and simple MPIwrapper library is used to provide this ABI for any given MPI installation. MPIwrapper needs to be compiled for each MPI installation that is to be used with MPItrampoline, but this is quick and easy.",
  "license": "MIT",
  "keywords": [
    "MPI",
    "distributed computing",
    "high-performance computing",
    "package management",
    "parallel computing"
  ],
  "language": "eng"
}
