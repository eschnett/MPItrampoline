name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_TYPE: Debug

jobs:
  mpiwrapper:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        mpi: [MPICH, OpenMPI]

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v4

    - name: Install ${{matrix.mpi}}
      run: |
        case "${{matrix.mpi}}" in
            MPICH)
                sudo apt-get update
                sudo apt-get install libmpich-dev
                ;;
            OpenMPI)
                ./.github/workflows/install-openmpi.sh
                ;;
        esac

    - name: Configure
      run: |
        cd mpiwrapper
        cmake \
            -B ${{github.workspace}}/build \
            -DCMAKE_C_COMPILER=mpicc \
            -DCMAKE_INSTALL_PREFIX=$HOME/mpiwrapper-${{matrix.mpi}}

    - name: Build
      run: cd mpiwrapper && cmake --build ${{github.workspace}}/build --verbose

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install
      run: cd mpiwrapper && cmake --install ${{github.workspace}}/build

  mpitrampoline:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        shared: [shared-off, shared-on]

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: |
        shared=$(echo ${{matrix.shared}} | sed -e 's/shared-//')
        cd mpitrampoline
        cmake \
            -B ${{github.workspace}}/build \
            -DBUILD_SHARED_LIBS=${shared} \
            -DCMAKE_INSTALL_PREFIX=$HOME/mpitrampoline

    - name: Build
      run: cd mpitrampoline && cmake --build ${{github.workspace}}/build --verbose

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install
      run: cd mpitrampoline && cmake --install ${{github.workspace}}/build
